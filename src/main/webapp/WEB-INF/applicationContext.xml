<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans     
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-2.5.xsd "
	>

	<!-- 在xml配置了这个标签后，spring可以自动去扫描base-pack下面或者子包下面的java文件，如果扫描到有@Component 
		@Controller@Service等这些注解的类，则把这些类注册为bean -->
	<context:component-scan base-package="com.lostpeople" />
	<mvc:annotation-driven />
	<context:property-placeholder location="/WEB-INF/hibernate.properties" />
	<mvc:resources mapping="/**" location="/" />
	<bean id ="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass">
			<value>org.springframework.web.servlet.view.InternalResourceView</value>
		</property>
	<!--Jsp页面都放在/目录下-->
		<property name ="prefix">
			<value>/</value>
		</property>
	
	<!--JSP页面的后缀都是.jsp-->
		<property name ="suffix">
			<value>.jsp</value>
		</property>
 	</bean>
	<!-- 定义数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">   
    	<property name="driverClassName" value="${dataSource.driverClassName}" />   
  		<property name="url" value="${dataSource.url}" />   
  		<property name="username" value="${dataSource.username}" />   
  		<property name="password" value="${dataSource.password}" />   
 	</bean>  
 	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>   
    			<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>    
   			</props>   
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.lostpeople.forms</value>
			</list>
		</property>
	</bean>
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">   
  		<property name="sessionFactory" ref="sessionFactory" />   
  		<property name="dataSource" ref="dataSource" />   
 	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	
	<!--  
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login.jsp" />
		<property name="successUrl" value="/" />
		<property name="unauthorizedUrl" value="/getToLoginPage" /> 
		<property name="filters">
			<map>
				<entry key="authc" value-ref="formAuthenticationFilter" />
			</map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/**=anon
			</value>
		</property>
	</bean>
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myShiroRealm" />
	</bean>
	<bean id="myShiroRealm" class="com.sinosoft.barracks.shiro.MyShiroRealm"/>
	
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	
	<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManager" ref="cacheManager" />
	</bean>
	<bean id="cacheManager" class="net.sf.ehcache.CacheManager" />
	
	<bean id="formAuthenticationFilter"	class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter" />
	-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8"/>
		<property name="maxUploadSize">  
        	<value>4048576</value>  
    	</property> 
	</bean>
</beans>